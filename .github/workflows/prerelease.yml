name: Pre-Release

on:
  push:
    branches: ["main"]

# Must change after discuss
env:
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  BUILD_TYPE: Release
  ARTIFACTORY_NAME: artifactory
  ARTIFACTORY_USERNAME: 
  USTORE_CONAN_PACKAGE: 
  IP_ADDRESS:


jobs:

  versioning:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        ref: 'main-dev'
    - uses: actions/setup-node@v3
    - run: cp .github/workflows/package.json . && npm install && npx semantic-release
  
  
  build_ustore:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        backend: [ucset, rocksdb, leveldb]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'
      - run: git submodule update --init --recursive

      # Can store our package recipe in aws intance.
      #  Run before conan commands and stop after execute.
      - name: Prepare CMake, Conan and PyArrow
        run: python -m pip install --force-reinstall numpy pyarrow cmake conan==1.57.0

      - name: Install ustore dependencies using conan
        run: |
          conan remote add $ARTIFACTORY_NAME http://$IP_ADDRESS:8081/artifactory/api/conan/conan-local
          conan user $ARTIFACTORY_USERNAME -r $ARTIFACTORY_NAME -p ${{ secrets.ARTIFACTORY_PASSWORD }}
          conan install $USTORE_CONAN_PACKAGE -r $ARTIFACTORY_NAME -g cmake

      - name: Configure CMake
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release \
              -DUSTORE_BUILD_TESTS=1 \
              -DUSTORE_BUILD_ENGINE_UCSET=1 \
              -DUSTORE_BUILD_ENGINE_LEVELDB=1 \
              -DUSTORE_BUILD_ENGINE_ROCKSDB=1 \
              -DUSTORE_BUILD_API_FLIGHT=0 . \
              -B ./build_release

      - name: Build
        run: make -j 32 -C --silent ./build_release

      - name: Upload Binaries
        uses: actions/upload-artifact@v3.1.1
        with:
          name: binaries
          path: build_release/bin/*


  test_ustore:
    runs-on: ubuntu-latest
    needs: build_ustore
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: binaries

      - name: Change Permissions
        run: chmod +x /home/runner/work/ustore/ustore/*
      
      - name: Run Tests
        run: for test in $(ls ./build_release/bin/*test_units*); do  echo -e "------ \e[93mRunning $test\e[0m ------"; timeout -v --kill-after=5 300 $test; done


  build_test_wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - name: Install ustore dependencies using conan
        run: |
          conan remote add $ARTIFACTORY_NAME http://$IP_ADDRESS:8081/artifactory/api/conan/conan-local
          conan user $ARTIFACTORY_USERNAME -r $ARTIFACTORY_NAME -p ${{ secrets.ARTIFACTORY_PASSWORD }}
          conan install $USTORE_CONAN_PACKAGE -r $ARTIFACTORY_NAME -g cmake

      - uses: pypa/cibuildwheel@v2.11.3
        with:
          output-dir: dist
  

  build_test_java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Install ustore dependencies using conan
        run: |
          conan remote add $ARTIFACTORY_NAME http://$IP_ADDRESS:8081/artifactory/api/conan/conan-local
          conan user $ARTIFACTORY_USERNAME -r $ARTIFACTORY_NAME -p ${{ secrets.ARTIFACTORY_PASSWORD }}
          conan install $USTORE_CONAN_PACKAGE -r $ARTIFACTORY_NAME -g cmake

      - name: Build and test java
        run: |
          export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
          bash java/pack.sh

  
  build_test_golang:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - run: git submodule update --init --recursive --remote go-ustore/

      - name: Install golang
        run: sudo apt update && sudo apt install golang
      
      - name: Install ustore dependencies using conan
        run: |
          conan remote add $ARTIFACTORY_NAME http://$IP_ADDRESS:8081/artifactory/api/conan/conan-local
          conan user $ARTIFACTORY_USERNAME -r $ARTIFACTORY_NAME -p ${{ secrets.ARTIFACTORY_PASSWORD }}
          conan install $USTORE_CONAN_PACKAGE -r $ARTIFACTORY_NAME -g cmake
      
      - name: Build golang
        run: bash go-ustore/pack.sh

      - name: Test golang
        run: |
          go mod tidy
          go test go-ustore/...


# Must discuss

  # build_docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     - name: Get version
  #       run: version=$(cat VERSION)

  #     # Optional, must discuss
  #     - name: Build Docker
  #       run: |
  #         docker buildx create --use
  #         docker buildx build \
  #           --platform "linux/amd64,linux/arm64" \
  #           --build-arg version=$version \
  #           --file ustore-scripts/Dockerfile.ubuntu \
  #           --tag unum/ustore:$version-jammy \
  #           --tag unum/ustore:latest