name: Pre-Release

on:
  push:
    branches: ["main-dev"]

# Must change after discuss
env:
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  BUILD_TYPE: Release
  AWS_DEFAULT_REGION: us-east-1


jobs:

  # versioning:
  #   name: Semantic Release
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       persist-credentials: false
  #       ref: 'main-dev'
  #   - uses: actions/setup-node@v3
  #   - run: cp .github/workflows/package.json . && npm install && npx semantic-release
  
  
  build_ustore:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'
      - run: git submodule update --init --recursive

      - name: Prepare CMake, Conan and PyArrow
        run: python -m pip install --force-reinstall numpy pyarrow cmake conan==1.57.0

      - name: install aws cli
        uses: unfor19/install-aws-cli-action@master
        with:
          version: 2.11.0

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region $AWS_DEFAULT_REGION

      - name: Install ustore dependencies using conan
        run: |
          aws s3 cp s3://ustore-dependency-test/ustore_dependency_shared.tar.gz ustore_dependency_shared.tar.gz
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          tar -xzf ustore_dependency_shared.tar.gz -C ~/.conan
          conan export . user/channel
          conan install ustore_depend/0.12.1@user/channel --build=ustore_depend -g cmake
          rm -rf ustore_dependency_shared.tar.gz

      - name: Configure cmake
        run: |
          cmake -DCMAKE_BUILD_TYPE="$BUILD_TYPE" \
                -DUSTORE_BUILD_TESTS=1 \
                -DUSTORE_BUILD_BENCHMARKS=0 \
                -DUSTORE_BUILD_ENGINE_UCSET=1 \
                -DUSTORE_BUILD_ENGINE_LEVELDB=1 \
                -DUSTORE_BUILD_ENGINE_ROCKSDB=1 \
                -DUSTORE_BUILD_API_FLIGHT_CLIENT=0 \
                -DUSTORE_BUILD_API_FLIGHT_SERVER=1 . \
                -B ./build_release
                
      - name: Build   
        run: |
          make -j4 \
              ustore_flight_server_ucset \
              ustore_flight_server_leveldb \
              ustore_flight_server_rocksdb \
              --silent \
              -C ./build_release

      - name: Upload Binaries
        uses: actions/upload-artifact@v3.1.1
        with:
          name: binaries
          path: build_release/bin/*


  # test_ustore:
  #   runs-on: ubuntu-latest
  #   needs: build_ustore
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         ref: 'main-dev'

  #     - name: Download a Build Artifact
  #       uses: actions/download-artifact@v3.0.1
  #       with:
  #         name: binaries

  #     - name: Change Permissions
  #       run: chmod +x /home/runner/work/ustore/ustore/*
      
  #     - name: Run Tests
  #       run: for test in $(ls ./build_release/bin/*test_units*); do  echo -e "------ \e[93mRunning $test\e[0m ------"; timeout -v --kill-after=5 300 $test; done


  build_test_wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: 'main-dev'

      - name: Prepare CMake, Conan and PyArrow
        run: python -m pip install --force-reinstall numpy pyarrow cmake conan==1.57.0

      - name: install aws cli
        uses: unfor19/install-aws-cli-action@master
        with:
          version: 2.11.0

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region $AWS_DEFAULT_REGION

      - name: Build wheel
        run: |
          pip install cibuildwheel twine
          CIBW_BUILD="cp39-*" cibuildwheel --platform linux
          CIBW_BUILD="cp310-*" cibuildwheel --platform linux
          
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  

  # build_test_java:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         ref: 'main-dev'

  #     - name: Prepare CMake, Conan and PyArrow
  #       run: python -m pip install --force-reinstall numpy pyarrow cmake conan==1.57.0

  #     - name: install aws cli
  #       uses: unfor19/install-aws-cli-action@master
  #       with:
  #         version: 2.11.0

  #     - name: Configure AWS CLI
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws configure set default.region $AWS_DEFAULT_REGION

  #     - name: Install ustore dependencies using conan
  #       run: |
  #         aws s3 cp s3://ustore-test-conan/ustore_dependency.tar.gz ustore_dependency.tar.gz
  #         conan profile new --detect default
  #         conan profile update settings.compiler.libcxx=libstdc++11 default
  #         tar -xzvf ustore_dependency.tar.gz -C ~/.conan
  #         conan install ustore/1.1.1@admin/arrow-static -g cmake
      
  #     - name: Install default jdk
  #       run: sudo apt install default-jdk -y

  #     - name: Build and test java
  #       run: |
  #         export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
  #         bash java/pack.sh

  
  # build_test_golang:
  #   runs-on: ubuntu-latest
  #   steps:

  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #         ref: 'main-dev'

  #     - run: git submodule update --init --recursive

  #     - name: Install golang
  #       run: sudo apt update && sudo apt install golang
      
  #     - name: Prepare CMake, Conan and PyArrow
  #       run: python -m pip install --force-reinstall numpy pyarrow cmake conan==1.57.0

  #     - name: install aws cli
  #       uses: unfor19/install-aws-cli-action@master
  #       with:
  #         version: 2.11.0

  #     - name: Configure AWS CLI
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws configure set default.region $AWS_DEFAULT_REGION

  #     - name: Install ustore dependencies using conan
  #       run: |
  #         aws s3 cp s3://ustore-test-conan/ustore_dependency.tar.gz ustore_dependency.tar.gz
  #         conan profile new --detect default
  #         conan profile update settings.compiler.libcxx=libstdc++11 default
  #         tar -xzvf ustore_dependency.tar.gz -C ~/.conan
  #         conan install ustore/1.1.1@admin/arrow-static -g cmake
      
  #     - name: Build golang
  #       run: bash go-ustore/pack.sh

  #     - name: Test golang
  #       run: |
  #         go mod tidy
  #         go test go-ustore/...


# Must discuss

  # build_docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     - name: Get version
  #       run: version=$(cat VERSION)

  #     # Optional, must discuss
  #     - name: Build Docker
  #       run: |
  #         docker buildx create --use
  #         docker buildx build \
  #           --platform "linux/amd64,linux/arm64" \
  #           --build-arg version=$version \
  #           --file ustore-scripts/Dockerfile.ubuntu \
  #           --tag unum/ustore:$version-jammy \
  #           --tag unum/ustore:latest